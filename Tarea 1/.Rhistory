data<-read.csv(C:\Users\nicov\Desktop\Universidad\Trabajos Universidad Uai\Semestre X\Metodos de aprendizaje de máquinas\github\tareas\msds_AprendizajeMaquinas\Tarea 1\datos_t1_centroides.csv)
data<-read.csv("C:/Users/nicov/Desktop/Universidad/
Trabajos Universidad Uai/Semestre X/Metodos de aprendizaje de máquinas/github/tareas/msds_AprendizajeMaquinas/Tarea 1/datos_t1_centroides.csv",sep=",",header=TRUE)
data<-read.csv("datos_t1_centroides.csv",sep=",",header=TRUE)
View(data)
sum(is.na(data))
1661*41
1980/68101
aply(data,margin=2,fun=sum)
apply(data,margin=2,fun=sum)
apply(data,MARGIN=2,FUN = =sum)
apply(x=is.na(data),MARGIN=2,FUN = =sum)
apply(X=is.na(data),MARGIN=2,FUN = =sum)
apply(X=is.na(data),MARGIN=2,FUN =sum)
apply(X=is.na(data),MARGIN=1,FUN =sum)
apply(X=is.na(data),MARGIN=1,FUN =sum)>0
sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0)
Tuplas_na
Tuplas_na<-sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0)
Tuplas_na
Tuplas_na*100/1661
Tuplas_na/1661
Tuplas_na*100/1661
heatmaply::heatmaply_na(data)
#12.5 % de las tuplas tienen nulos.
pacman::p_load(heatmaply)
library(heatmaply)
heatmaply::heatmaply_na(data)
heatmaply::heatmaply_na(data)
heatmaply_na(data)
heatmaply::heatmaply_na(data)
Column_na<-sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0)
Column_na<-sum(apply(X=is.na(data),MARGIN=2,FUN =sum)>0)
#11 columnas presentan NA
apply(X=is.na(data),MARGIN=2,FUN =sum
#11 columnas presentan NA
apply(X=is.na(data),MARGIN=2,FUN =sum)
#11 columnas presentan NA
apply(X=is.na(data),MARGIN=2,FUN =sum)
data<-read.csv("datos_t1_centroides.csv",sep=",",header=TRUE)
#Analisis de datos nulos.
sum(is.na(data))
Tuplas_na<-sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0)
Tuplas_na*100/1661
#12.5 % de las tuplas tienen nulos.
Column_na<-sum(apply(X=is.na(data),MARGIN=2,FUN =sum)>0)
#11 columnas presentan NA
apply(X=is.na(data),MARGIN=2,FUN =sum)
Tuplas_na
apply(X=is.na(data),MARGIN=2,FUN =sum)[valores]
#11 columnas presentan NA
valores<-apply(X=is.na(data),MARGIN=2,FUN =sum)>0
apply(X=is.na(data),MARGIN=2,FUN =sum)[valores]
#11 columnas presentan NA
valores_col<-apply(X=is.na(data),MARGIN=2,FUN =sum)>0
apply(X=is.na(data),MARGIN=1,FUN =sum[valores_tu]
valores_tu<-sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0
valores_tu<-apply(X=is.na(data),MARGIN=1,FUN =sum)>0
apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu]
rownames(data)[valores_tu]
algo<-c(rownames(data)[valores_tu],apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu])
algo<-cbind(rownames(data)[valores_tu],apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu])
View(algo)
indice_nulos<-cbind(rownames(data)[valores_tu],apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu])
View(indice_nulos)
#Filas con su respectivo indice y n°de nulo
indice_nulos<-cbind(rownames(data)[valores_tu],apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu])
valores_1<-apply(X=is.na(data),MARGIN=1,FUN =sum)>1
data2<-df[-rownames(data)[valores_1],]
indices_e<-c(rownames(data)[valores_1])
data2<-df[-c(rownames(data)[valores_1]),]
data2<-df[-c(rownames(data)[valores_1]),]
data2<-df[-indices_e,]
data2<-df[!(row.names(df) %in% indices_e),]
indices_e<-c(rownames(data)[valores_1])
data2<-df[!(row.names(df) %in% indices_e),]
data2<-data[!(row.names(df) %in% indices_e),]
data2<-data[-indices_e,]
indices_e<-c(row.names(data)[valores_1])
data2<-data[-indices_e,]
indices_e
data2<-data[!indices_e,]
data2<-data[indices_e,]
indices_e<-c(row.names(data)[!(valores_1)])
indices_e
data2<-data[indices_e,]
View(data2)
apply(X=is.na(data2),MARGIN=2,FUN =sum)
data_final<-data[c(row.names(data)[!(valores_tu)])]
data_final<-data[c(row.names(data)[!(valores_tu)]),]
View(data_final)
apply(X=is.na(data_final),MARGIN=2,FUN =sum)
cor(data_final, method= "pearson")
cor(data_final, method= "pearson")
summary(data_final[comuna], method= "pearson")
summary(data_final["comuna"], method= "pearson")
summary(data_final["comuna"])
summary(data_final["COMUNA"])
summary(data_final$COMUNA)
data_final$COMUNA
count(data_final$COMUNA)
pacman::p_load(dplyr)
count(data_final$COMUNA)
data_final$COMUNA %>% count()
#X1., cod_com, COMUNA, MANZ_EN.
data_final$COMUNA %>% group_by(a, b) %>% summarise(n = n()). count()
#X1., cod_com, COMUNA, MANZ_EN.
data_final %>% COUNT(COMUNA)
#X1., cod_com, COMUNA, MANZ_EN.
data_final %>% count(COMUNA)
data_final %>% count(COMUNA)
data_final %>% count(cod_com)
data_final %>% count(MANZ_EN)
data_final<-data_final(-c("COMUNA","cod_com","MANZ_EN"),)
data_final<-data_final[-c("COMUNA","cod_com","MANZ_EN"),]
data_final$X.1<-NULL
data_final$COMUNA<-NULL
data_final$cod_com<-NULL
data_final$MANZ_EN<-NULL
cor(data_final,method="pearson")
corplot(data_final,method="pearson")
pacman::p_load(dplyr,psych)
corplot(data_final,cex=1.2,main="Correlaciones")
corPlot(data_final,cex=1.2,main="Correlaciones")
corPlot(data_final,main="Correlaciones")
?corPlot
corPlot(data_final,cex=0.5,main="Correlaciones")
corPlot(data_final,cex=0.5,main="Correlaciones")
corPlot(data_final,cex=0.5,main="Correlaciones",method="number")
cor(data_final, method="Pearson")[cor(data_final, method="Pearson")>0.5]
cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.5]
cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.75]
corPlot(data_final)[cor(data_final, method="pearson")>0.75]
plot(cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.75])
cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.75]
cor(data_final, method="pearson")>0.75
View(data)
#Analisis de variables
data_final["ID_MANZ"]
#Analisis de variables
summary(data_final["ID_MANZ"])
#Analisis de variables
summary(data_final["ID_MANZ"]).count()
#Analisis de variables
count(data_final["ID_MANZ"])
pacman::p_load(dplyr,psych)
#Analisis de variables
count(data_final["ID_MANZ"])
#Analisis de variables
unique(data_final["ID_MANZ"])
#Analisis de variables
x <- c(1,1,2,3,4)
unique(x)
unique(data["MANZ_EN"])
#eliminamos X1 por ser los indices y las demás columnas por ser el mismo valor para todos los datos.
unique(data["COMUNA"])
unique(data["cod_com"])
unique(data["MANZ_EN"])
unique(data["ZONA"])
sum(unique(data["ZONA"]))
count(unique(data["ZONA"]))
cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.75]
cor(data_final, method="pearson")>0.75
#Analisis de variables
str(data_final)
#Estadistica Descriptiva.
str(data)
#Analisis de variables
str(data_final)
#Manzana id:
ggplot(data=data_final["ID_MANZ"])+
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
pacman::p_load(dplyr,psych,ggplot2,ggplot)
#Manzana id:
ggplot(data=data_final["ID_MANZ"])+
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
#Manzana id:
ggplot(data=data_final["ID_MANZ"])+
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000))
#Manzana id:
ggplot(data=data_final["ID_MANZ"],aes(data=data_final["ID_MANZ"])+
#Manzana id:
ggplot(data=data_final["ID_MANZ"],aes(x=data=data_final["ID_MANZ"]))+
#Manzana id:
ggplot(data=data_final["ID_MANZ"],aes(x=data_final["ID_MANZ"]))+
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000))
#Manzana id:
ggplot(data=data_final$ID_MANZ,aes(x=data_final$ID_MANZ))+
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000))
#Manzana id:
ggplot(data=data_final$ID_MANZ,aes(x=data_final$ID_MANZ))+
geom_histogram(fill="blue", binwidth = 10000)
#Manzana id:
ggplot(data=data_final["ID_MANZ"],aes(x=data_final$ID_MANZ))+
geom_histogram(fill="blue", binwidth = 10000)
#Manzana id:
count(unique(data["ID_MANZ"]))
#Manzana id:
count(unique(data_final["ID_MANZ"]))
#Analisis duplicados
duplicated(data_final)
#Analisis duplicados
count(duplicated(data_final))
#Analisis duplicados
sum(duplicated(data_final))
sum(c(TRUE,FALSE,TRUE))
group_by(data_final["ID_MANZ"])
group_by(data_final["ID_MANZ"],count(data_final["ID_MANZ"]))
?grup_by
group_by(data_final["ID_MANZ"],count(data_final["ID_MANZ"]))
cor(data_final, method="pearson")[cor(data_final, method="pearson")>0.75]
#Manzana id:
boxplot(data_final["ibt"])
#Manzana id:
boxplot(data_final)
#Manzana id:
boxplot(data_final[!c("ID_MANZ","X","Y")])
#Manzana id:
boxplot(data_final[!c("ID_MANZ","X","Y"))]
#Manzana id:
boxplot(data_final[!c("ID_MANZ","X","Y")])
#Manzana id:
boxplot(data_final[,!c("ID_MANZ","X","Y")])
#Manzana id:
boxplot(data_final[,1:35])
#Manzana id:
boxplot(data_final[,2:35])
#Manzana id:
boxplot(data_final[,1:2])
#ibt
boxplot(data_final[,1:2])
#ibt
boxplot(data_final["ibt"])
#dimc_Acc
boxplot(data_final[,4:7])
#dimc_Acc
boxplot(data_final[,4:10])
#dimc_Acc
boxplot(data_final[,6:10])
#dimc_Acc
boxplot(data_final["dim_acc"])
boxplot(i,main=i)
#Boxplots
colnames(data_final)
for(i in colnames(data_final)){
boxplot(i,main=i)
}
boxplot(i)
for(i in colnames(data_final)){
boxplot(data_final[i],main=i)
}
simil(data_final, method="pearson")
pacman::p_load(dplyr,psych,ggplot2,tidyverse,proxy)
simil(data_final, method="pearson")
data<-read.csv("datos_t1_centroides.csv",sep=",",header=TRUE)
#Analisis de datos nulos.
sum(is.na(data))
Tuplas_na<-sum(apply(X=is.na(data),MARGIN=1,FUN =sum)>0)
Tuplas_na
Tuplas_na*100/1661
#12.5 % de las tuplas tienen nulos.
Column_na<-sum(apply(X=is.na(data),MARGIN=2,FUN =sum)>0)
#11 columnas presentan NA
#True/falso presencia nulos por columna/fila
valores_col<-apply(X=is.na(data),MARGIN=2,FUN =sum)>0
valores_tu<-apply(X=is.na(data),MARGIN=1,FUN =sum)>0
#columnas con su respectivo numero de nulos
apply(X=is.na(data),MARGIN=2,FUN =sum)[valores]
#Filas con su respectivo indice y n°de nulo
indice_nulos<-cbind(rownames(data)[valores_tu],apply(X=is.na(data),MARGIN=1,FUN =sum)[valores_tu])
valores_1<-apply(X=is.na(data),MARGIN=1,FUN =sum)>1
#se sacan las filas con n°de nulos mayor a 1.
indices_e<-c(row.names(data)[!(valores_1)])
indices_e
#vemos que la cantidad de nulos sobrante es de 28, correspondiente a la columan ise.
#Es mejor eliminar 28 filas, que eliminar esa columna y perder los demás datos.
data2<-data[indices_e,]
apply(X=is.na(data2),MARGIN=2,FUN =sum)
#data_final
data_final<-data[c(row.names(data)[!(valores_tu)]),]
apply(X=is.na(data_final),MARGIN=2,FUN =sum)
#Estadistica Descriptiva.
str(data)
#Notamos que las variables X1., cod_com, COMUNA, MANZ_EN no aportan valores diferentes.
unique(data["COMUNA"])
unique(data["cod_com"])
unique(data["MANZ_EN"])
#eliminamos X1 por ser los indices y las demás columnas por ser el mismo valor para todos los datos.
data_final$X.1<-NULL
data_final$COMUNA<-NULL
data_final$cod_com<-NULL
data_final$MANZ_EN<-NULL
#Analisis duplicados: No hay filas duplicadas.
sum(duplicated(data_final))
#Analisis de variables
str(data_final)
count(unique(data["ZONA"]))
pacman::p_load(dplyr,psych,ggplot2,tidyverse,proxy)
count(unique(data["ZONA"]))
colnames(data_final)
for(i in colnames(data_final)){
boxplot(data_final[i],main=i)
}
#Boxplots, revisar outliers.
columnas<-colnames(data_final)
columnas[1]
columnas[29:35]
?simil
simil(data_final[,29:35], method="pearson")
#generar una data que disminuya los computos.
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
#generar una data que disminuya los computos.
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
pacman::p_load(dplyr,psych,ggplot2,tidyverse,proxy,dplyr)
#generar una data que disminuya los computos.
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
View(muestra)
simil(list(muestra$dimc_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$idep), method="pearson")
simil(list(muestra$dim_acc,muestra$isal), method="pearson")
simil(list(muestra$dim_acc,muestra$iser), method="pearson")
simil(list(muestra$dim_acc,muestra$ise), method="pearson")
simil(list(muestra$icul,muestra$iav), method="pearson")
muestra<-data_final %>%
select(dim_amb, iata, icv) %>%
sample_n(500)
simil(list(muestra$dim_amb,muestra$iata), method="pearson")
simil(list(muestra$dim_amb,muestra$icv), method="pearson")
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
simil(list(muestra$dim_acc,muestra$iav,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra), method="pearson")
simil(list(muestra), method="pearson")
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$iav,muestra$icul,muestra$idep,
muestra$isal,muestra$iser,muestra$ise), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$idep), method="pearson")
simil(list(muestra$dim_acc,muestra$isal), method="pearson")
simil(list(muestra$dim_acc,muestra$iser), method="pearson")
simil(list(muestra$dim_acc,muestra$ise), method="pearson")
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$idep), method="pearson")
simil(list(muestra$dim_acc,muestra$isal), method="pearson")
simil(list(muestra$dim_acc,muestra$iser), method="pearson")
simil(list(muestra$dim_acc,muestra$ise), method="pearson")
simil(list(muestra$dim_amb,muestra$iata), method="pearson")
muestra<-data_final %>%
select(dim_amb, iata, icv) %>%
sample_n(500)
simil(list(muestra$dim_amb,muestra$iata), method="pearson")
simil(list(muestra$dim_amb,muestra$icv), method="pearson")
cor(muestra)
muestra<-data_final %>%
select(dim_amb, iata, icv) %>%
sample_n(500)
simil(list(muestra$dim_amb,muestra$iata), method="pearson")
simil(list(muestra$dim_amb,muestra$icv), method="pearson")
cor(muestra)
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$idep), method="pearson")
simil(list(muestra$dim_acc,muestra$isal), method="pearson")
simil(list(muestra$dim_acc,muestra$iser), method="pearson")
simil(list(muestra$dim_acc,muestra$ise), method="pearson")
cor(muestra)
muestra<-data_final %>%
select(dim_acc, iav, icul,idep,isal,iser,ise) %>%
sample_n(500)
simil(list(muestra$dim_acc,muestra$iav), method="pearson")
simil(list(muestra$dim_acc,muestra$icul), method="pearson")
simil(list(muestra$dim_acc,muestra$idep), method="pearson")
simil(list(muestra$dim_acc,muestra$isal), method="pearson")
simil(list(muestra$dim_acc,muestra$iser), method="pearson")
simil(list(muestra$dim_acc,muestra$ise), method="pearson")
cor(muestra)
boxplot(data_final[i],main=i)$out
for(i in colnames(data_final)){
boxplot(data_final[i],main=i)$out
}
for(i in colnames(data_final)){
boxplot(data_final[i],main=i)$out
}
outliers<-c()
for(i in colnames(data_final)){
caja<-boxplot(data_final[i],main=i)
caja
outliers<-cbind(outliers,caja$out)
}
warning()
warnings()
View(outliers)
outliers<-c()
for(i in colnames(data_final)){
caja<-boxplot(data_final[i],main=i)
caja
outliers<-rbind(outliers,caja$out)
}
View(outliers)
View(outliers)
outliers<-c()
for(i in colnames(data_final)){
caja<-boxplot(data_final[i],main=i)
caja
outliers<-cbind(outliers,caja$out)
}
View(outliers)
for(i in colnames(data_final)){
caja<-boxplot(data_final[i],main=i)
caja
caja$out
outliers<-cbind(outliers,caja$out)
}
boxplot(data_final["iav"])
boxplot(data_final["iav"])$out
#
c(boxplot(data_final["iav"])$out)
#
algo<-c(boxplot(data_final["iav"])$out)
algo[1]
algo<-cbind(algo,c(1,2))
