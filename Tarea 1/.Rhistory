#CLUSTER SIN XY.
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-kmeans(data.umap,13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
modelo2<-kmeans(data_final[36:37],13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Arbol######
sprintf("Metodo de clasificacion:", models[2])
#CLUSTER SIN XY.
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[2], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
modelo2<-clusteriza(data_final[36:37], models[2], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### gmm ######
sprintf("Metodo de clasificacion:", models[3])
#CLUSTER SIN XY.
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[3], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
modelo2<-clusteriza(data_final[36:37], models[3], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Cmeans ######
sprintf("Metodo de clasificacion:", models[4])
#CLUSTER SIN XY.
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[4], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
modelo2<-clusteriza(data_final[36:37], models[4], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Dbs Scan######
sprintf("Metodo de clasificacion:", models[5])
#CLUSTER SIN XY.
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[5], k = 13)
pacman::p_load(dplyr,psych,ggplot2,tidyverse,proxy,dplyr,umap, ggdendro, cluster,dbscan)
get_clust_tendency(data_final[1:35], n = 50, graph = FALSE)
#######################################CLUSTERS###################################
models <- c("kmeans", "hier", "gmm", "cmeans", "dbscan")
evaluacion_cluster <- function(data, clusters){
coefSil <- silhouette(clusters,dist(data))
cohesiones <- clus_cohes(data, clusters)
separaciones <- clus_sep(data, clusters)
correlacion <- clus_cor(data, clusters)
return(list(correlacion, mean(coefSil[,3]), cohesiones, separaciones))
}
####Kmeans############
cat("Metodo de clasificacion:", models[1])
for(i in 1:5){
cat("###############","Metodo de clasificacion:", models[i],"#########################")
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[i], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[i], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
}
models[5]
models[1]
####Kmeans############
cat("Metodo de clasificacion:", models[1])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-kmeans(data.umap,13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-kmeans(data_final[36:37],13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Arbol######
cat("Metodo de clasificacion:", models[2])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[2], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[2], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### gmm ######
cat("Metodo de clasificacion:", models[3])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[3], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[3], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Cmeans ######
cat("Metodo de clasificacion:", models[4])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[4], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[4], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
#### Dbs Scan######
sprintf("Metodo de clasificacion:", models[5])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[5], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-kmeans(data.umap,13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
eval[1]
for(i in 1:4){
cat("###############","Metodo de clasificacion:", models[i],"#########################")
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[i], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
cor_s<-cbind(cor_s,eval[1])
sil_s<-cbind(sil_s,eval[2])
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[i], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
cor_xy<-cbind(cor_xy,eval[1])
sil_xy<-cbind(sil_xy,eval[2])
}
cor_s<-c()
sil_s<-c()
cor_xy<-c()
sil_xy<-c()
for(i in 1:4){
cat("###############","Metodo de clasificacion:", models[i],"#########################")
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[i], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
cor_s<-cbind(cor_s,eval[1])
sil_s<-cbind(sil_s,eval[2])
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[i], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
cor_xy<-cbind(cor_xy,eval[1])
sil_xy<-cbind(sil_xy,eval[2])
}
cor_s
sil_s
cor_xy
sil_xy
models
cor_s
sil_s
cor_xy
sil_xy
resultados<-rbind(models,cor_s,sil_s,cor_xy,sil_xy)
resultados<-rbind(models[1:4],cor_s,sil_s,cor_xy,sil_xy)
resultados
resultados<-cbind(c("cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
resultados<-cbind(c("metodo","cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
resultados<-rbind(models[1:4],cor_s,sil_s,cor_xy,sil_xy)
resultados<-cbind(c("metodo","cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[5], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
data<-data.umap
clusters<-modelo1$cluster
coefSil <- silhouette(clusters,dist(data))
coefSil
cohesiones <- clus_cohes(data, clusters)
cohesiones
coefSil <- silhouette(clusters,dist(data))
coefSil
#### Dbs Scan######
sprintf("Metodo de clasificacion:", models[5])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[5], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
modelo1
?dbscan
resultados<-cbind(c("metodo","cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
####Correlaciones y sillohuete promedio distintos modelos###
cor_s<-c()
sil_s<-c()
cor_xy<-c()
sil_xy<-c()
for(i in 1:4){
cat("###############","Metodo de clasificacion:", models[i],"#########################")
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[i], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
cor_s<-cbind(cor_s,eval[1])
sil_s<-cbind(sil_s,eval[2])
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[i], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
cor_xy<-cbind(cor_xy,eval[1])
sil_xy<-cbind(sil_xy,eval[2])
}
resultados<-rbind(models[1:4],cor_s,sil_s,cor_xy,sil_xy)
resultados<-cbind(c("metodo","cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
###Correlaciones y sillohuete promedio distintos modelos###
cor_s<-c()
sil_s<-c()
cor_xy<-c()
sil_xy<-c()
for(i in 1:4){
cat("###############","Metodo de clasificacion:", models[i],"#########################")
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[i], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
cor_s<-cbind(cor_s,eval[1])
sil_s<-cbind(sil_s,eval[2])
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[i], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
cor_xy<-cbind(cor_xy,eval[1])
sil_xy<-cbind(sil_xy,eval[2])
}
resultados<-rbind(models[1:4],cor_s,sil_s,cor_xy,sil_xy)
resultados<-cbind(c("metodo","cor_s","sil_s","cor_xy","sil_xy"),resultados)
resultados
?mclust
cat("Metodo de clasificacion:", models[3])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[3], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[3], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
cat("Metodo de clasificacion:", models[3])
#CLUSTER SIN XY.
print("cluster sin XY")
model.umap <- umap(data_final[1:35])
data.umap <-
model.umap$layout %>%
as.data.frame()
modelo1<-clusteriza(data.umap, models[3], k = 13)
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo1$cluster))) +
theme()
eval <- evaluacion_cluster(data.umap, modelo1$cluster)
eval
#CLUSTER POR XY
print("cluster por XY")
modelo2<-clusteriza(data_final[36:37], models[3], k = 13)
ggplot(data_final[36:37]) +
geom_point(aes(X,Y, col=factor(modelo2$cluster))) +
theme()
eval <- evaluacion_cluster(data_final[36:37], modelo2$cluster)
eval
#UMAP CON CLUSTER POR XY.
ggplot(data.umap) +
geom_point(aes(V1,V2, col=factor(modelo2$cluster))) +
theme()
